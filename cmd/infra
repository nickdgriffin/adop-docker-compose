#!/bin/bash -e

SUB_CMD_NAME="infra"
SUB_CMD_DIR="${CLI_CMD_DIR}/subcmd_infra"

# Standard Functions
cmd_desc() {
    echo "For running infrastructure provisioning commands"
}

cmd_usage() {
    echo "usage: ${CMD_NAME} ${SUB_CMD_NAME} [<options>] <subcommand>"
    echo "Options:"
    printf "    %-5s   %s\n" "-p <name>" "The infrastructure provider to target"
    printf "    %-5s   %s\n" "-t <name>" "The type of infrastructure to provision"
}

help() {
    cmd_usage
    echo
    echo "Available subcommands are:"
    printf "    %-10s   %s\n" "create" "Create infrastructure"
    printf "    %-10s   %s\n" "remove" "Remove infrastructure"
    printf "    %-10s   %s\n" "list" "List infrastructure"
    printf "    %-10s   %s\n" "providers" "List available providers"
    printf "    %-10s   %s\n" "help" "Prints this help information"
    echo
}

# Functions
create() {
    echo "*** Not yet implemented ***"
}

remove() {
    echo "*** Not yet implemented ***"
}

list() {
    echo "*** Not yet implemented ***"
}

providers() {
    echo "Available providers are:"
    for provider in $(find ${SUB_CMD_DIR} -maxdepth 1 -mindepth 1 -type d -printf "%f\n")
    do
        printf "    %-10s   $(. ${SUB_CMD_DIR}/${provider}/${provider} cmd_desc)" "${provider}"
        echo
        
    done
}

types() {
    echo "Available types by provider are:"
    echo
    for provider in $(find ${SUB_CMD_DIR} -maxdepth 1 -mindepth 1 -type d -printf "%f\n")
    do
        printf "    %-10s   ${provider} \n"
        printf "    %-10s   $(. ${SUB_CMD_DIR}/${provider}/${provider} types)"
        echo
    done
}

# Parameters
while getopts "p:t:" opt; do
  case $opt in
    p)
      export PROVIDER_NAME="${OPTARG}"
      ;;
    t)
      export TYPE="${OPTARG}"
      ;;
    *)
      echo "Invalid parameter(s) or option(s)."
      usage
      exit 1
      ;;
  esac
done

shift $(($OPTIND -1))
SUBCOMMAND_OPT="${1:-help}"

# Only shift if there are other parameters
if [ $# -ge 1 ]; then
    shift
fi

${SUBCOMMAND_OPT} "$@"
